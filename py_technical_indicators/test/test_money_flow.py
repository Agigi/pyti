import unittest
import numpy as np

from sample_data import SampleData
from technical_indicators import money_flow


class TestAccumulationDistribution(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.close_data = SampleData().get_sample_close_data()
        self.high_data = SampleData().get_sample_high_data()
        self.low_data = SampleData().get_sample_low_data()
        self.volume = SampleData().get_sample_volume()

        self.mf_expected = [403819083.62, 521062012.45333332,
        568393761.20000005, 893928159.99666655, 370384423.17000002,
        688967967.80666661, 419920225.04666668, 510524769.02666664,
        300738598.09333336, 361869391.60000002, 290563866.56,
        320069747.80000001, 365640647.88333333, 364992286.18666667,
        279627393.24000001, 277027147.83999997, 278409111.68000001,
        262041235.84, 326578213.86666667, 466222373.08666658,
        354677815.56666666, 262797716.63000003, 356623415.28666669,
        365200930.43000001, 320475874.99666673, 329553332.45999998,
        384551506.40000004, 264585012.72, 353686934.95000005,
        359495898.56666666, 338849237.13333333, 368216305.59999996,
        301823750.53333336, 337098304.25, 436150528.5, 364857828.74999994,
        416090081.20000005, 454456718.16000003, 590382096.69000006,
        529603654.86666673, 929759854.10000002, 1014212380.8366668,
        949197805.8900001, 456708405.95999998, 462766703.74999994,
        677285866.22666669, 363036149.07666665, 300009006.21999997,
        283846761.94, 397214281.35000002, 357638450.39999998,
        371748794.45333332, 359005054.80000001, 323029936.86666673,
        380235712.70666677, 549235342.13, 363767577.60000002,
        413702700.38999999, 526287685.34000009, 468033482.24333334,
        284061311.52000004, 327340299.31999999, 262039290.58666667,
        206317325.07999995, 304970216.21999997, 396726890.39999992,
        345854664.97000003, 340130733.57999998, 710313392.23333335,
        484265907.16000009, 485804599.60666668, 571027119.13333333,
        434299295.34000003, 509386718.61000007, 433491333.62666667,
        538342917.05000007, 459131611.9000001, 452465738.0533334,
        454451423.42666662, 772198597.33333349, 617684408.77333343,
        423395776.46333331, 687760530.82666671, 162837949.76333335,
        348171924.97666669, 370222905.69999999, 435177447.51666659,
        480827476.79999995, 407048631.12666661, 478507628.79999995,
        786577701.90999997, 985248633.62000024, 964013359.52999997,
        1591910773.7233334, 837702835.23333323, 475390118.57666671, 538392414.0,
        533205759.73999995, 589621299.67999995, 637104306.50666666,
        638100659.4666667, 605829829.46333349, 1178039670.8399997,
        795149802.88000011, 480976760.85333329, 506994422.79999995,
        389041974.61333334, 428767016.99333334, 358154896.5, 383256278.16000003,
        582244029.2166667, 268489757.94333327, 283053919.03999996,
        346292870.49000001, 230645897.80000004, 435386317.5, 378387431.69999999,
        287552886.94000006, 271677523.0, 297260471.93333334, 309385739.11333334,
        363476936.88000005, 399649118.7233333, 320546826.38666672,
        350225596.93333334, 323455300.46999997, 351280945.74666667]

    def test_money_flow(self):
        mf = money_flow.money_flow(self.close_data, self.high_data, self.low_data, self.volume)
        np.testing.assert_array_equal(mf, self.mf_expected)

    def test_money_flow_invalid_data(self):
        self.close_data.append(1)
        with self.assertRaises(Exception):
            money_flow.money_flow(self.close_data, self.high_data, self.low_data, self.volume)
