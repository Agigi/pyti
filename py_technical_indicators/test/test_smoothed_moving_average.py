import unittest
import numpy as np

from sample_data import SampleData
from technical_indicators import smoothed_moving_average


class TestSmoothedMovingAverage(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.data = SampleData().get_sample_stock_data()

        self.smmma_period_6_expected = [np.nan, np.nan, np.nan, np.nan, np.nan, 153.57054783950616, 154.06674382716051, 154.61427469135802, 154.19486882716049, 153.75118827160495, 154.74980709876544, 155.15481481481481, 154.74192901234568, 153.47376543209876, 153.72033179012348, 151.28373456790123, 150.57378086419754, 147.86452932098766, 148.06131944444445, 145.60039351851853, 145.40465277777778, 147.25523148148147, 149.50739969135802, 148.93614197530863, 148.01211419753088, 147.8682098765432, 148.94795524691358, 148.94903549382715, 147.42540123456791, 149.12516203703703, 148.09431327160493, 147.27616512345679, 143.49689043209875, 146.53487654320989, 147.97487654320989, 152.26650462962962, 153.45496141975309, 151.90029320987654, 148.51952160493826, 148.74146604938272, 149.81116512345679, 152.65407407407409, 153.38271604938271, 155.06034722222222, 154.83186728395063, 155.77750771604937, 157.00733024691357, 158.32240740740741, 156.43037037037035, 156.03335648148149, 156.98093364197533, 156.04524691358026, 153.51982253086422, 153.02635030864198, 152.86260030864199, 154.10622685185186, 153.67196759259261, 154.4103935185185, 152.14341049382716, 152.53254629629632, 152.2132175925926, 152.43857253086421, 152.00145061728395, 152.57577932098764, 152.34655864197529, 153.61015432098765, 153.75847222222222, 152.41126543209876, 154.51918209876544, 154.73005401234568, 152.91927469135803, 152.00461419753086, 151.21376543209877, 151.6257098765432, 152.11607253086422, 150.22273148148147, 149.86980709876545, 151.54943672839508, 149.79944444444445, 152.2115663580247, 153.0959799382716, 153.16872685185186, 151.34183641975309, 150.40154320987654, 150.14849537037037, 150.45136574074073, 151.05441358024692, 150.56398148148148, 150.2224922839506, 150.61431327160494, 151.13864969135804, 151.21805555555557, 151.68283179012346, 152.23626543209878, 152.73574074074074, 152.06002314814816, 152.8911728395062, 153.11180555555555, 153.33645833333335, 153.40693672839507, 153.24655092592593, 152.88713734567901, 153.17421296296297, 151.52307098765434, 151.76560185185184, 151.93331018518518, 152.04474537037038, 150.39115740740741, 145.98263117283952, 145.20152006172842, 144.32229938271604, 144.13628086419752, 144.26888888888888, 143.31474537037036, 143.72594907407407, 143.08125771604938, 143.02908950617285, 140.01630401234567, 139.95405092592591, 138.80453703703702, 139.21474537037037, 138.22862654320988, 136.52197530864197, 134.65918981481482, 134.8406790123457, 134.0658101851852, 134.87326388888889]

        self.smmma_period_8_expected = [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 112.93099853515625, 112.627763671875, 112.307158203125, 113.05234374999999, 113.345947265625, 113.0400830078125, 112.107041015625, 112.29609130859376, 110.47686035156249, 109.97842041015625, 108.00964599609374, 108.2006787109375, 106.38936767578126, 106.28594238281251, 107.674970703125, 109.33577392578125, 108.86349365234375, 108.14548339843751, 108.000302734375, 108.7618896484375, 108.771650390625, 107.68779296875, 108.979111328125, 108.1904443359375, 107.56977783203125, 104.78116943359376, 107.08502929687501, 108.14447998046874, 111.34250976562501, 112.20280029296876, 110.986171875, 108.37183593750001, 108.52010009765625, 109.35900634765625, 111.549150390625, 112.15225341796875, 113.38362792968749, 113.11655517578126, 113.74460449218751, 114.63194580078124, 115.6222119140625, 114.22312011718749, 113.94697021484374, 114.65884765625, 113.96214599609375, 112.1129345703125, 111.80302734375, 111.69620849609376, 112.61649414062499, 112.31673095703125, 112.87898193359375, 111.15139892578125, 111.4161865234375, 111.17534912109376, 111.36725585937499, 111.05968261718751, 111.50650634765624, 111.31716308593749, 112.23763916015625, 112.33851318359375, 111.32777832031249, 112.88999267578126, 113.03623291015626, 111.6791796875, 111.01561523437499, 110.45447509765624, 110.7563134765625, 111.147578125, 109.78049560546876, 109.51815185546876, 110.751376953125, 109.43059326171876, 111.23082275390625, 111.89610595703125, 111.91703124999999, 110.51583007812501, 109.83368652343749, 109.64186767578126, 109.88882568359375, 110.38886962890625, 110.04742919921875, 109.77890624999999, 110.0417626953125, 110.41503417968751, 110.46951904296876, 110.82376708984374, 111.22977539062501, 111.57993164062499, 111.06480224609376, 111.68610595703126, 111.84534179687499, 112.00893310546876, 112.06490478515624, 111.95203613281251, 111.67502441406251, 111.89010498046875, 110.67337158203125, 110.87009033203124, 111.00824707031251, 111.09833984375001, 109.86903076171876, 106.61036865234375, 106.05268798828125, 105.42846923828125, 105.34432128906249, 105.4965771484375, 104.80970947265625, 105.06850341796876, 104.54493164062499, 104.49708007812501, 102.2558154296875, 102.23972412109374, 101.40180419921876, 101.7348046875, 101.02455322265625, 99.779890136718748, 98.386020507812503, 98.524182128906261, 97.961647949218744, 98.587983398437501]

        self.smmma_period_10_expected = [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 88.253344999999996, 88.85522499999999, 89.092733999999993, 88.84742700000001, 88.101599999999991, 88.258085000000008, 86.817025999999998, 86.428369000000004, 84.864250999999996, 85.037399000000008, 83.620557000000005, 83.561368999999999, 84.67855999999999, 86.011250000000004, 85.626351, 85.041026000000002, 84.906473000000005, 85.500649999999993, 85.488407999999993, 84.603383000000008, 85.641913000000002, 85.037998000000002, 84.555350000000004, 82.328752000000009, 84.169116000000002, 85.023196999999996, 87.577128000000002, 88.240409999999997, 87.260916999999992, 85.172533999999999, 85.277961000000005, 85.908557000000002, 87.641845000000004, 88.134856999999997, 89.143885999999995, 88.956240000000008, 89.446099000000004, 90.106011999999993, 90.855350999999999, 89.72601499999999, 89.518511000000004, 90.099314000000007, 89.553723000000005, 88.085969000000006, 87.848505000000003, 87.784562000000008, 88.544264999999996, 88.307183000000009, 88.747769999999988, 87.380754999999994, 87.601060000000004, 87.392786000000001, 87.531955999999994, 87.285141999999993, 87.652655999999993, 87.509360000000001, 88.249820999999997, 88.317865000000012, 87.499496999999991, 88.743322000000006, 88.853905000000012, 87.76532499999999, 87.237616000000003, 86.794124999999994, 87.046644000000001, 87.371375, 86.276735000000002, 86.082926, 87.089479000000011, 86.031646999999992, 87.455848000000003, 87.973511999999999, 87.983927999999992, 86.870260000000002, 86.317346999999998, 86.152105000000006, 86.360419000000007, 86.756809000000004, 86.491769000000005, 86.302306999999999, 86.523990999999995, 86.812731000000014, 86.838768000000002, 87.111270000000005, 87.431484999999995, 87.712497999999997, 87.297841000000005, 87.783967000000004, 87.905413999999993, 88.035624000000013, 88.078024999999997, 87.986825999999994, 87.769278000000014, 87.945830000000001, 86.972880000000004, 87.134029999999996, 87.253067000000001, 87.330549000000005, 86.356410000000011, 83.768286000000003, 83.339417999999995, 82.862571000000003, 82.806632000000008, 82.939746999999997, 82.414190999999988, 82.643535000000014, 82.234496000000007, 82.170530000000014, 80.363391000000007, 80.353354999999993, 79.692114000000004, 79.972487999999998, 79.414200000000008, 78.434849999999997, 77.340414999999993, 77.468116000000009, 77.016447999999997, 77.513792999999993]

    def test_smma_period_6(self):
        period = 6
        smma = smoothed_moving_average.smoothed_moving_average(self.data, period)
        np.testing.assert_array_equal(smma, self.smmma_period_6_expected)

    def test_smma_period_8(self):
        period = 8
        smma = smoothed_moving_average.smoothed_moving_average(self.data, period)
        np.testing.assert_array_equal(smma, self.smmma_period_8_expected)

    def test_smma_period_10(self):
        period = 10
        smma = smoothed_moving_average.smoothed_moving_average(self.data, period)
        np.testing.assert_array_equal(smma, self.smmma_period_10_expected)

    def test_smma_invalid_period(self):
        period = 128
        with self.assertRaises(Exception):
            smoothed_moving_average.smoothed_moving_average(self.data, period)
